/*
! tailwindcss v3.0.24 | MIT License | https://tailwindcss.com
*/ /*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
    box-sizing: border-box; /* 1 */
    border-width: 0; /* 2 */
    border-style: solid; /* 2 */
    border-color: #e5e7eb; /* 2 */
}

::before,
::after {
    --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
    line-height: 1.5; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
    -moz-tab-size: 4; /* 3 */
    tab-size: 4; /* 3 */
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
    margin: 0; /* 1 */
    line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
    height: 0; /* 1 */
    color: inherit; /* 2 */
    border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
    text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
    color: inherit;
    text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
    font-weight: bolder;
}
/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
    font-size: 1em; /* 2 */
}
/*
Add the correct font size in all browsers.
*/

small {
    font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
    text-indent: 0; /* 1 */
    border-color: inherit; /* 2 */
    border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 1 */
    line-height: inherit; /* 1 */
    color: inherit; /* 1 */
    margin: 0; /* 2 */
    padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
    text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
    -webkit-appearance: button; /* 1 */
    background-color: transparent; /* 2 */
    background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
    outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
    box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
    vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
    -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/

summary {
    display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
    margin: 0;
}

fieldset {
    margin: 0;
    padding: 0;
}

legend {
    padding: 0;
}

ol,
ul,
menu {
    list-style: none;
    margin: 0;
    padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/

textarea {
    resize: vertical;
}
    /*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

    input::placeholder,
    textarea::placeholder {
        opacity: 1; /* 1 */
        color: #9ca3af; /* 2 */
    }
/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
    cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
    cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
    display: block; /* 1 */
    vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
    max-width: 100%;
    height: auto;
}
/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
    display: none;
}

:root,
[data-theme] {
    background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
    color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

html {
    -webkit-tap-highlight-color: transparent;
}

:root {
    --p: 259 94% 51%;
    --pf: 259 94% 41%;
    --sf: 314 100% 38%;
    --af: 174 60% 41%;
    --nf: 219 14% 22%;
    --in: 198 93% 60%;
    --su: 158 64% 52%;
    --wa: 43 96% 56%;
    --er: 0 91% 71%;
    --inc: 198 100% 12%;
    --suc: 158 100% 10%;
    --wac: 43 100% 11%;
    --erc: 0 100% 14%;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-text-case: uppercase;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --pc: 0 0% 100%;
    --s: 314 100% 47%;
    --sc: 0 0% 100%;
    --a: 174 60% 51%;
    --ac: 175 44% 15%;
    --n: 219 14% 28%;
    --nc: 0 0% 100%;
    --b1: 0 0% 100%;
    --b2: 0 0% 95%;
    --b3: 180 2% 90%;
    --bc: 215 28% 17%;
}

@media (prefers-color-scheme: dark) {

    :root {
        --p: 262 80% 50%;
        --pf: 262 80% 40%;
        --sf: 316 70% 40%;
        --af: 175 70% 33%;
        --in: 198 93% 60%;
        --su: 158 64% 52%;
        --wa: 43 96% 56%;
        --er: 0 91% 71%;
        --inc: 198 100% 12%;
        --suc: 158 100% 10%;
        --wac: 43 100% 11%;
        --erc: 0 100% 14%;
        --rounded-box: 1rem;
        --rounded-btn: 0.5rem;
        --rounded-badge: 1.9rem;
        --animation-btn: 0.25s;
        --animation-input: .2s;
        --btn-text-case: uppercase;
        --btn-focus-scale: 0.95;
        --border-btn: 1px;
        --tab-border: 1px;
        --tab-radius: 0.5rem;
        --pc: 0 0% 100%;
        --s: 316 70% 50%;
        --sc: 0 0% 100%;
        --a: 175 70% 41%;
        --ac: 0 0% 100%;
        --n: 218 18% 12%;
        --nf: 223 17% 8%;
        --nc: 220 13% 69%;
        --b1: 220 18% 20%;
        --b2: 220 17% 17%;
        --b3: 219 18% 15%;
        --bc: 220 13% 69%;
    }
}

[data-theme=light] {
    --p: 259 94% 51%;
    --pf: 259 94% 41%;
    --sf: 314 100% 38%;
    --af: 174 60% 41%;
    --nf: 219 14% 22%;
    --in: 198 93% 60%;
    --su: 158 64% 52%;
    --wa: 43 96% 56%;
    --er: 0 91% 71%;
    --inc: 198 100% 12%;
    --suc: 158 100% 10%;
    --wac: 43 100% 11%;
    --erc: 0 100% 14%;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-text-case: uppercase;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --pc: 0 0% 100%;
    --s: 314 100% 47%;
    --sc: 0 0% 100%;
    --a: 174 60% 51%;
    --ac: 175 44% 15%;
    --n: 219 14% 28%;
    --nc: 0 0% 100%;
    --b1: 0 0% 100%;
    --b2: 0 0% 95%;
    --b3: 180 2% 90%;
    --bc: 215 28% 17%;
}

[data-theme=dark] {
    --p: 262 80% 50%;
    --pf: 262 80% 40%;
    --sf: 316 70% 40%;
    --af: 175 70% 33%;
    --in: 198 93% 60%;
    --su: 158 64% 52%;
    --wa: 43 96% 56%;
    --er: 0 91% 71%;
    --inc: 198 100% 12%;
    --suc: 158 100% 10%;
    --wac: 43 100% 11%;
    --erc: 0 100% 14%;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-text-case: uppercase;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --pc: 0 0% 100%;
    --s: 316 70% 50%;
    --sc: 0 0% 100%;
    --a: 175 70% 41%;
    --ac: 0 0% 100%;
    --n: 218 18% 12%;
    --nf: 223 17% 8%;
    --nc: 220 13% 69%;
    --b1: 220 18% 20%;
    --b2: 220 17% 17%;
    --b3: 219 18% 15%;
    --bc: 220 13% 69%;
}

*, ::before, ::after {
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x:;
    --tw-pan-y:;
    --tw-pinch-zoom:;
    --tw-scroll-snap-strictness: proximity;
    --tw-ordinal:;
    --tw-slashed-zero:;
    --tw-numeric-figure:;
    --tw-numeric-spacing:;
    --tw-numeric-fraction:;
    --tw-ring-inset:;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur:;
    --tw-brightness:;
    --tw-contrast:;
    --tw-grayscale:;
    --tw-hue-rotate:;
    --tw-invert:;
    --tw-saturate:;
    --tw-sepia:;
    --tw-drop-shadow:;
    --tw-backdrop-blur:;
    --tw-backdrop-brightness:;
    --tw-backdrop-contrast:;
    --tw-backdrop-grayscale:;
    --tw-backdrop-hue-rotate:;
    --tw-backdrop-invert:;
    --tw-backdrop-opacity:;
    --tw-backdrop-saturate:;
    --tw-backdrop-sepia:;
}

.alert {
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
    padding: 1rem;
    border-radius: var(--rounded-box, 1rem);
}

    .alert > :not([hidden]) ~ :not([hidden]) {
        --tw-space-y-reverse: 0;
        margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
    }

@media (min-width: 768px) {

    .alert {
        flex-direction: row;
    }

        .alert > :not([hidden]) ~ :not([hidden]) {
            --tw-space-y-reverse: 0;
            margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
            margin-bottom: calc(0px * var(--tw-space-y-reverse));
        }
}

.alert > :where(*) {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.avatar.placeholder > div {
    display: flex;
    align-items: center;
    justify-content: center;
}

.badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    height: 1.25rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    width: fit-content;
    padding-left: 0.563rem;
    padding-right: 0.563rem;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
    border-radius: var(--rounded-badge, 1.9rem);
}

.btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-color: transparent;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    text-align: center;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: var(--rounded-btn, 0.5rem);
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 1em;
    min-height: 3rem;
    font-weight: 600;
    text-transform: uppercase;
    text-transform: var(--btn-text-case, uppercase);
    -webkit-text-decoration-line: none;
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}

    .btn-disabled, .btn[disabled] {
        pointer-events: none;
    }

.btn-circle {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0px;
}

.btn.loading, .btn.loading:hover {
    pointer-events: none;
}

    .btn.loading:before {
        margin-right: 0.5rem;
        height: 1rem;
        width: 1rem;
        border-radius: 9999px;
        border-width: 2px;
        animation: spin 2s linear infinite;
        content: "";
        border-top-color: transparent;
        border-left-color: transparent;
        border-bottom-color: currentColor;
        border-right-color: currentColor;
    }

@media (prefers-reduced-motion: reduce) {

    .btn.loading:before {
        animation: spin 10s linear infinite;
    }
}

@keyframes spin {

    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.btn-group > input[type="radio"].btn {
    -webkit-appearance: none;
    appearance: none;
}

    .btn-group > input[type="radio"].btn:before {
        content: attr(data-title);
    }

.card {
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    border-radius: var(--rounded-box, 1rem);
}

    .card:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
    }

.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: 0.5rem;
}

    .card-body :where(p) {
        /*flex-grow: 1;*/
    }

    .card-body :where(ul) {
        flex-grow: 1;
    }

.card figure {
    display: flex;
    align-items: center;
    justify-content: center;
}

.card.image-full {
    display: grid;
}

    .card.image-full:before {
        position: relative;
        content: "";
        z-index: 10;
        --tw-bg-opacity: 1;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        opacity: 0.75;
        border-radius: var(--rounded-box, 1rem);
    }

    .card.image-full:before, .card.image-full > * {
        grid-column-start: 1;
        grid-row-start: 1;
    }

    .card.image-full > figure img {
        height: 100%;
        object-fit: cover;
    }

    .card.image-full > .card-body {
        position: relative;
        z-index: 20;
        --tw-text-opacity: 1;
        color: hsl(var(--nc) / var(--tw-text-opacity));
    }

.checkbox {
    flex-shrink: 0;
    --chkbg: var(--bc);
    --chkfg: var(--b1);
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
    appearance: none;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2;
    border-radius: var(--rounded-btn, 0.5rem);
}

.dropdown {
    position: relative;
    display: inline-block;
}

    .dropdown > *:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
    }

    .dropdown .dropdown-content {
        visibility: hidden;
        position: absolute;
        z-index: 50;
        opacity: 0;
        transform-origin: top;
        --tw-scale-x: .95;
        --tw-scale-y: .95;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
        transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
        transition-duration: 200ms;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }

.dropdown-end .dropdown-content {
    right: 0px;
}

.dropdown-left .dropdown-content {
    top: 0px;
    right: 100%;
    bottom: auto;
    transform-origin: right;
}

.dropdown-right .dropdown-content {
    left: 100%;
    top: 0px;
    bottom: auto;
    transform-origin: left;
}

.dropdown-top .dropdown-content {
    bottom: 100%;
    top: auto;
    transform-origin: bottom;
}

.dropdown-end.dropdown-right .dropdown-content {
    bottom: 0px;
    top: auto;
}

.dropdown-end.dropdown-left .dropdown-content {
    bottom: 0px;
    top: auto;
}

.dropdown.dropdown-open .dropdown-content, .dropdown.dropdown-hover:hover .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    visibility: visible;
    opacity: 1;
}

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    row-gap: 2.5rem;
    column-gap: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

    .footer > * {
        display: grid;
        place-items: start;
        gap: 0.5rem;
    }

.footer-center {
    place-items: center;
    text-align: center;
}

    .footer-center > * {
        place-items: center;
    }

@media (min-width: 48rem) {

    .footer {
        grid-auto-flow: column;
    }

    .footer-center {
        grid-auto-flow: row dense;
    }
}

.label {
    display: flex;
    -webkit-user-select: none;
    user-select: none;
    align-items: center;
/*    justify-content: space-between;*/
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}

.input {
    flex-shrink: 1;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-width: 1px;
    /*border-color: hsl(var(--bc) / var(--tw-border-opacity));*/
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem);
}

.input-group {
    display: flex;
    width: 100%;
    align-items: stretch;
}

    .input-group > *, .input-group > .input {
        border-radius: 0px;
    }

    .input-group :where(span) {
        display: flex;
        align-items: center;
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
        padding-left: 1rem;
        padding-right: 1rem;
    }

    .input-group :first-child {
        border-top-left-radius: var(--rounded-btn, 0.5rem);
        border-top-right-radius: 0;
        border-bottom-left-radius: var(--rounded-btn, 0.5rem);
        border-bottom-right-radius: 0;
    }

    .input-group :last-child {
        border-top-left-radius: 0;
        border-top-right-radius: var(--rounded-btn, 0.5rem);
        border-bottom-left-radius: 0;
        border-bottom-right-radius: var(--rounded-btn, 0.5rem);
    }

.link {
    cursor: pointer;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline;
}

.menu {
    display: flex;
    flex-direction: column;
}

    .menu.horizontal {
        display: inline-flex;
        flex-direction: row;
    }

        .menu.horizontal :where(li) {
            flex-direction: row;
        }

    .menu :where(li) {
        position: relative;
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        align-items: stretch;
    }

    .menu :where(li:not(.menu-title)) > :where(*:not(ul)) {
        display: flex;
    }

    .menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)) {
        cursor: pointer;
        -webkit-user-select: none;
        user-select: none;
        align-items: center;
        outline: 2px solid transparent;
        outline-offset: 2px;
    }

    .menu > :where(li > *:not(ul):focus) {
        outline: 2px solid transparent;
        outline-offset: 2px;
    }

    .menu > :where(li.disabled > *:not(ul):focus) {
        cursor: auto;
    }

    .menu > :where(li) :where(ul) {
        display: flex;
        flex-direction: column;
        align-items: stretch;
    }

    .menu > :where(li) > :where(ul) {
        position: absolute;
        display: none;
        top: initial;
        left: 100%;
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
        border-bottom-right-radius: inherit;
        border-bottom-left-radius: inherit;
    }

    .menu > :where(li:hover) > :where(ul) {
        display: flex;
    }

    .menu > :where(li:focus) > :where(ul) {
        display: flex;
    }

.modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    display: flex;
    justify-content: center;
    opacity: 0;
    z-index: 999;
    background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.4;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-property: transform, opacity;
    overflow-y: hidden;
    overscroll-behavior: contain;
}

:where(.modal) {
    align-items: center;
}

.modal-box {
    max-height: calc(100vh - 5em);
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    padding: 1.5rem;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    width: 91.666667%;
    max-width: 32rem;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    overflow-y: auto;
    overscroll-behavior: contain;
}

.modal-open, .modal:target, .modal-toggle:checked + .modal {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
}

.modal-action {
    display: flex;
    margin-top: 1.5rem;
    justify-content: flex-end;
}

.modal-toggle {
    position: fixed;
    height: 0px;
    width: 0px;
    -webkit-appearance: none;
    appearance: none;
    opacity: 0;
}

.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, 0.5rem);
    min-height: 4rem;
    width: 100%;
}

:where(.navbar > *) {
    display: inline-flex;
    align-items: center;
}

.progress {
    position: relative;
    width: 100%;
    -webkit-appearance: none;
    appearance: none;
    overflow: hidden;
    height: 0.5rem;
    border-radius: var(--rounded-box, 1rem);
}

.stats {
    display: inline-grid;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    border-radius: var(--rounded-box, 1rem);
}

:where(.stats) {
    grid-auto-flow: column;
    overflow-x: auto;
}

.stat {
    display: inline-grid;
    width: 100%;
    grid-template-columns: repeat(1, 1fr);
    column-gap: 1rem;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.1;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    padding-top: 1rem;
    padding-bottom: 1rem;
}

.stat-title {
    grid-column-start: 1;
    white-space: nowrap;
    opacity: 0.6;
}

.stat-value {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: 2.25rem;
    line-height: 2.5rem;
    font-weight: 800;
}

.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
    user-select: none;
    place-content: center;
    cursor: pointer;
}

    .swap > * {
        grid-column-start: 1;
        grid-row-start: 1;
        transition-duration: 300ms;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-property: transform, opacity;
    }

    .swap input {
        -webkit-appearance: none;
        appearance: none;
    }

        .swap .swap-on, .swap .swap-indeterminate, .swap input:indeterminate ~ .swap-on {
            opacity: 0;
        }

        .swap input:checked ~ .swap-off, .swap.swap-active .swap-off, .swap input:indeterminate ~ .swap-off {
            opacity: 0;
        }

        .swap input:checked ~ .swap-on, .swap-active .swap-on, .swap input:indeterminate ~ .swap-indeterminate {
            opacity: 1;
        }

.btn-outline .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}

.btn-outline.btn-primary .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}

.btn-outline.btn-secondary .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--sc) / var(--tw-text-opacity));
}

.btn-outline.btn-accent .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--ac) / var(--tw-text-opacity));
}

.btn-outline .badge.outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    background-color: transparent;
}

.btn-outline.btn-primary .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--p) / var(--tw-text-opacity));
}

.btn-outline.btn-secondary .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--s) / var(--tw-text-opacity));
}

.btn-outline.btn-accent .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--a) / var(--tw-text-opacity));
}

.btn-outline.btn-info .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--in) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--in) / var(--tw-text-opacity));
}

.btn-outline.btn-success .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--su) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--su) / var(--tw-text-opacity));
}

.btn-outline.btn-warning .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--wa) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--wa) / var(--tw-text-opacity));
}

.btn-outline.btn-error .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--er) / var(--tw-text-opacity));
}

.btn-outline:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
}

    .btn-outline:hover .badge.outline {
        --tw-border-opacity: 1;
        border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--nc) / var(--tw-text-opacity));
    }

.btn-outline.btn-primary:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pc) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--p) / var(--tw-text-opacity));
}

    .btn-outline.btn-primary:hover .badge.outline {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pc) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--pc) / var(--tw-text-opacity));
    }

.btn-outline.btn-secondary:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--sc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--sc) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--s) / var(--tw-text-opacity));
}

    .btn-outline.btn-secondary:hover .badge.outline {
        --tw-border-opacity: 1;
        border-color: hsl(var(--sc) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--sc) / var(--tw-text-opacity));
    }

.btn-outline.btn-accent:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--ac) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--ac) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--a) / var(--tw-text-opacity));
}

    .btn-outline.btn-accent:hover .badge.outline {
        --tw-border-opacity: 1;
        border-color: hsl(var(--ac) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--ac) / var(--tw-text-opacity));
    }

.btn:active:hover,
.btn:active:focus {
    animation: none;
    transform: scale(var(--btn-focus-scale, 0.95));
}

.btn:hover, .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
}

.btn:focus-visible {
    outline: 2px solid hsl(var(--nf));
    outline-offset: 2px;
}

.btn-error {
    --tw-border-opacity: 1;
    border-color: hsl(var(--er) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}

    .btn-error:hover, .btn-error.btn-active {
        --tw-border-opacity: 1;
        border-color: hsl(var(--er) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--er) / var(--tw-bg-opacity));
    }

    .btn-error:focus-visible {
        outline: 2px solid hsl(var(--er));
    }

.btn.glass:hover,
.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
}

.btn.glass:focus-visible {
    outline: 2px solid 0 0 2px currentColor;
}

.btn-ghost {
    border-width: 1px;
    border-color: transparent;
    background-color: transparent;
    color: currentColor;
}

    .btn-ghost:hover, .btn-ghost.btn-active {
        --tw-border-opacity: 0;
        background-color: hsl(var(--bc) / var(--tw-bg-opacity));
        --tw-bg-opacity: 0.2;
    }

    .btn-ghost:focus-visible {
        outline: 2px solid 0 0 2px currentColor;
    }

.btn-outline {
    border-color: currentColor;
    background-color: transparent;
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
}

    .btn-outline:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--bc) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--bc) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--b1) / var(--tw-text-opacity));
    }

    .btn-outline.btn-primary {
        --tw-text-opacity: 1;
        color: hsl(var(--p) / var(--tw-text-opacity));
    }

        .btn-outline.btn-primary:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--pc) / var(--tw-text-opacity));
        }

    .btn-outline.btn-secondary {
        --tw-text-opacity: 1;
        color: hsl(var(--s) / var(--tw-text-opacity));
    }

        .btn-outline.btn-secondary:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--sf, var(--s)) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--sc) / var(--tw-text-opacity));
        }

    .btn-outline.btn-accent {
        --tw-text-opacity: 1;
        color: hsl(var(--a) / var(--tw-text-opacity));
    }

        .btn-outline.btn-accent:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--af, var(--a)) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--ac) / var(--tw-text-opacity));
        }

    .btn-outline.btn-success {
        --tw-text-opacity: 1;
        color: hsl(var(--su) / var(--tw-text-opacity));
    }

        .btn-outline.btn-success:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--su) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--su) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
        }

    .btn-outline.btn-info {
        --tw-text-opacity: 1;
        color: hsl(var(--in) / var(--tw-text-opacity));
    }

        .btn-outline.btn-info:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--in) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--in) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--inc, var(--nc)) / var(--tw-text-opacity));
        }

    .btn-outline.btn-warning {
        --tw-text-opacity: 1;
        color: hsl(var(--wa) / var(--tw-text-opacity));
    }

        .btn-outline.btn-warning:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--wa) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--wa) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--wac, var(--nc)) / var(--tw-text-opacity));
        }

    .btn-outline.btn-error {
        --tw-text-opacity: 1;
        color: hsl(var(--er) / var(--tw-text-opacity));
    }

        .btn-outline.btn-error:hover {
            --tw-border-opacity: 1;
            border-color: hsl(var(--er) / var(--tw-border-opacity));
            --tw-bg-opacity: 1;
            background-color: hsl(var(--er) / var(--tw-bg-opacity));
            --tw-text-opacity: 1;
            color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
        }

.btn-disabled, .btn-disabled:hover, .btn[disabled], .btn[disabled]:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}

.btn.loading.btn-square:before, .btn.loading.btn-circle:before {
    margin-right: 0px;
}

.btn.loading.btn-xl:before, .btn.loading.btn-lg:before {
    height: 1.25rem;
    width: 1.25rem;
}

.btn.loading.btn-sm:before, .btn.loading.btn-xs:before {
    height: 0.75rem;
    width: 0.75rem;
}

.btn-group > input[type="radio"]:checked.btn, .btn-group > .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}

    .btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
        outline: 2px solid hsl(var(--p));
    }

.btn-group > .btn:not(:first-of-type) {
    margin-left: -1px;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

.btn-group > .btn:not(:last-of-type) {
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
}

@keyframes button-pop {

    0% {
        transform: scale(var(--btn-focus-scale, 0.95));
    }

    40% {
        transform: scale(1.02);
    }

    100% {
        transform: scale(1);
    }
}

.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}

.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}

.card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.card-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600;
}

.checkbox:focus-visible {
    outline: 2px solid hsl(var(--bc));
    outline-offset: 2px;
}

.checkbox:checked, .checkbox[checked="true"] {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-in-out;
    background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}

.checkbox:indeterminate {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-in-out;
    background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(0deg, hsl(var(--chkbg)) 43%, hsl(var(--chkfg)) 43%, hsl(var(--chkfg)) 57%, hsl(var(--chkbg)) 57%);
}

.checkbox:disabled {
    cursor: not-allowed;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    opacity: 0.2;
}

@keyframes checkmark {

    0% {
        background-position-y: 5px;
    }

    50% {
        background-position-y: -2px;
    }

    100% {
        background-position-y: 0;
    }
}

body[dir="rtl"] .checkbox {
    --chkbg: var(--bc);
    --chkfg: var(--b1);
}

    body[dir="rtl"] .checkbox:checked,
    body[dir="rtl"] .checkbox[checked="true"] {
        background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
    }

.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-error {
    outline: 2px solid hsl(var(--er));
}

.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-ghost {
    outline: 2px solid currentColor;
}

.dropdown.dropdown-open .dropdown-content, .dropdown.dropdown-hover:hover .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.label-text {
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    margin-left: 5px;
}

.label a:hover {
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
}

.input-bordered {
    --tw-border-opacity: 0.2;
}

.input:focus {
    outline: 2px solid hsla(var(--bc) / 0.2);
    outline-offset: 2px;
}

.input-disabled, .input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2;
}

    .input-disabled::placeholder, .input[disabled]::placeholder {
        color: hsl(var(--bc) / var(--tw-placeholder-opacity));
        --tw-placeholder-opacity: 0.2;
    }

.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}

.menu.horizontal li.bordered > a, .menu.horizontal li.bordered > button, .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}

.menu[class*=" p-"] li > *, .menu[class^="p-"] li > * {
    border-radius: var(--rounded-btn, 0.5rem);
}

.menu :where(li.bordered > *) {
    border-left-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}

.menu :where(li) > :where(*:not(ul)) {
    gap: 0.75rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    color: currentColor;
}

.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus), .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}

.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active), .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}

.menu :where(li:empty) {
    margin-left: 1rem;
    margin-right: 1rem;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    height: 1px;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}

.menu li.disabled > * {
    -webkit-user-select: none;
    user-select: none;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}

    .menu li.disabled > *:hover {
        background-color: transparent;
    }

.menu li.hover-bordered a {
    border-left-width: 4px;
    border-color: transparent;
}

    .menu li.hover-bordered a:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--p) / var(--tw-border-opacity));
    }

.menu.compact li > a, .menu.compact li > span {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.menu .menu-title > * {
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 700;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.4;
}

.menu :where(li:not(.disabled)) > :where(*:not(ul)) {
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.menu > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}

    .menu > :where(li:first-child) > :where(:not(ul)) {
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
        border-bottom-right-radius: unset;
        border-bottom-left-radius: unset;
    }

.menu > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}

    .menu > :where(li:last-child) > :where(:not(ul)) {
        border-top-left-radius: unset;
        border-top-right-radius: unset;
        border-bottom-right-radius: inherit;
        border-bottom-left-radius: inherit;
    }

.menu > :where(li) > :where(ul) :where(li) {
    width: 100%;
    white-space: nowrap;
}

    .menu > :where(li) > :where(ul) :where(li) :where(ul) {
        padding-left: 1rem;
    }

    .menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
        width: 100%;
        white-space: nowrap;
    }

.menu > :where(li) > :where(ul) > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}

    .menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
        border-bottom-right-radius: unset;
        border-bottom-left-radius: unset;
    }

.menu > :where(li) > :where(ul) > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}

    .menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
        border-top-left-radius: unset;
        border-top-right-radius: unset;
        border-bottom-right-radius: inherit;
        border-bottom-left-radius: inherit;
    }

.modal-open .modal-box, .modal-toggle:checked + .modal .modal-box, .modal:target .modal-box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.modal-action > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.progress::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
}

.progress-primary::-moz-progress-bar {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
}

.progress:indeterminate::after {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    content: "";
    position: absolute;
    top: 0px;
    bottom: 0px;
    left: -40%;
    width: 33.333333%;
    border-radius: var(--rounded-box, 1rem);
    animation: progress-loading 5s infinite ease-in-out;
}

.progress-primary:indeterminate::after {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
}

.progress::-webkit-progress-bar {
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    border-radius: var(--rounded-box, 1rem);
}

.progress::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
    border-radius: var(--rounded-box, 1rem);
}

.progress-primary::-webkit-progress-value {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
}

@keyframes progress-loading {

    50% {
        left: 107%;
    }
}

@keyframes radiomark {

    0% {
        box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
    }

    50% {
        box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
    }

    100% {
        box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
    }
}

@keyframes rating-pop {

    0% {
        transform: translateY(-0.125em);
    }

    40% {
        transform: translateY(-0.125em);
    }

    100% {
        transform: translateY(0);
    }
}

:where(.stats) > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(1px * var(--tw-divide-x-reverse));
    border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
}

.swap-rotate .swap-on, .swap-rotate .swap-indeterminate, .swap-rotate input:indeterminate ~ .swap-on {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked ~ .swap-off, .swap-rotate.swap-active .swap-off, .swap-rotate input:indeterminate ~ .swap-off {
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked ~ .swap-on, .swap-rotate.swap-active .swap-on, .swap-rotate input:indeterminate ~ .swap-indeterminate {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate ~ .swap-on {
    transform: rotateY(180deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    opacity: 1;
}

.swap-flip input:checked ~ .swap-off,
.swap-flip.swap-active .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
    transform: rotateY(-180deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    opacity: 1;
}

.swap-flip input:checked ~ .swap-on,
.swap-flip.swap-active .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
    transform: rotateY(0deg);
}

:root .prose {
    --tw-prose-body: hsla(var(--bc)/.8);
    --tw-prose-headings: hsl(var(--bc));
    --tw-prose-lead: hsl(var(--bc));
    --tw-prose-links: hsl(var(--bc));
    --tw-prose-bold: hsl(var(--bc));
    --tw-prose-counters: hsl(var(--bc));
    --tw-prose-bullets: hsla(var(--bc)/.5);
    --tw-prose-hr: hsla(var(--bc)/.2);
    --tw-prose-quotes: hsl(var(--bc));
    --tw-prose-quote-borders: hsla(var(--bc)/.2);
    --tw-prose-captions: hsla(var(--bc)/.5);
    --tw-prose-code: hsl(var(--bc));
    --tw-prose-pre-code: hsl(var(--nc));
    --tw-prose-pre-bg: hsl(var(--n));
    --tw-prose-th-borders: hsla(var(--bc)/.5);
    --tw-prose-td-borders: hsla(var(--bc)/.2);
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
    padding: 2px 8px;
    border-radius: var(--rounded-badge);
}

.prose code:after,
.prose code:before {
    content: none;
}

.prose pre code {
    border-radius: none;
    padding: 0;
}

.prose :where(tbody tr, thead):not(:where([class~="not-prose"] *)) {
    border-bottom-color: hsl(var(--bc) / 20%);
}

.rounded-box {
    border-radius: var(--rounded-box, 1rem);
}

.btn-circle:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 9999px;
    padding: 0px;
}

.btn-circle:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    border-radius: 9999px;
    padding: 0px;
}

.btn-circle:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0px;
}

.btn-circle:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    border-radius: 9999px;
    padding: 0px;
}

.input-sm {
    height: 2rem;
    padding-left: 0.15rem;
    padding-right: 0.15rem;
    font-size: 0.875rem;
    line-height: 2rem;

    /*width: 5px;*/
    
}

.modal-bottom {
    align-items: flex-end;
}

.stats-vertical {
    grid-auto-flow: row;
}

.alert-error {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--er) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}

.card-compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.card-compact .card-title {
    margin-bottom: 0.25rem;
}

.card-normal .card-body {
    padding: var(--padding-card, 2rem);
    font-size: 1rem;
    line-height: 1.5rem;
}

.card-normal .card-title {
    margin-bottom: 0.75rem;
}

.menu-compact :where(li > *) {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.modal-bottom :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: 2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
}

.modal-middle :where(.modal-box) {
    width: 91.666667%;
    max-width: 32rem;
    --tw-translate-y: 0px;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
}

.stats-vertical > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-y-reverse: 0;
    border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
    --tw-divide-x-reverse: 0;
    border-right-width: calc(0px * var(--tw-divide-x-reverse));
    border-left-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
}

.stats-vertical {
    overflow-y: auto;
}

.prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
}

    .prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-lead);
        font-size: 1.25em;
        line-height: 1.6;
        margin-top: 1.2em;
        margin-bottom: 1.2em;
    }

    .prose :where(a):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-links);
        text-decoration: underline;
        font-weight: 500;
    }

    .prose :where(strong):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600;
    }

    .prose :where(ol):not(:where([class~="not-prose"] *)) {
        list-style-type: decimal;
        padding-left: 1.625em;
    }

    .prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
        list-style-type: upper-alpha;
    }

    .prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
        list-style-type: lower-alpha;
    }

    .prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
        list-style-type: upper-alpha;
    }

    .prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
        list-style-type: lower-alpha;
    }

    .prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
        list-style-type: upper-roman;
    }

    .prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
        list-style-type: lower-roman;
    }

    .prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
        list-style-type: upper-roman;
    }

    .prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
        list-style-type: lower-roman;
    }

    .prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
        list-style-type: decimal;
    }

    .prose :where(ul):not(:where([class~="not-prose"] *)) {
        list-style-type: disc;
        padding-left: 1.625em;
    }

    .prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
    }

    .prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
        color: var(--tw-prose-bullets);
    }

    .prose :where(hr):not(:where([class~="not-prose"] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1px;
        margin-top: 3em;
        margin-bottom: 3em;
    }

    .prose :where(blockquote):not(:where([class~="not-prose"] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-left-width: 0.25rem;
        border-left-color: var(--tw-prose-quote-borders);
        quotes: "\201C""\201D""\2018""\2019";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-left: 1em;
    }

    .prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
        content: open-quote;
    }

    .prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
        content: close-quote;
    }

    .prose :where(h1):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 800;
        font-size: 2.25em;
        margin-top: 0;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
    }

    .prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
        font-weight: 900;
    }

    .prose :where(h2):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 700;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 1em;
        line-height: 1.3333333;
    }

    .prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
        font-weight: 800;
    }

    .prose :where(h3):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        font-size: 1.25em;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
    }

    .prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
        font-weight: 700;
    }

    .prose :where(h4):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        line-height: 1.5;
    }

    .prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
        font-weight: 700;
    }

    .prose :where(figure > *):not(:where([class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
    }

    .prose :where(figcaption):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.875em;
        line-height: 1.4285714;
        margin-top: 0.8571429em;
    }

    .prose :where(code):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-code);
        font-weight: 600;
        font-size: 0.875em;
    }

        .prose :where(code):not(:where([class~="not-prose"] *))::before {
            content: "`";
        }

        .prose :where(code):not(:where([class~="not-prose"] *))::after {
            content: "`";
        }

    .prose :where(a code):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-links);
    }

    .prose :where(pre):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        overflow-x: auto;
        font-weight: 400;
        font-size: 0.875em;
        line-height: 1.7142857;
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0.375rem;
        padding-top: 0.8571429em;
        padding-right: 1.1428571em;
        padding-bottom: 0.8571429em;
        padding-left: 1.1428571em;
    }

    .prose :where(pre code):not(:where([class~="not-prose"] *)) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
    }

        .prose :where(pre code):not(:where([class~="not-prose"] *))::before {
            content: none;
        }

        .prose :where(pre code):not(:where([class~="not-prose"] *))::after {
            content: none;
        }

    .prose :where(table):not(:where([class~="not-prose"] *)) {
        width: 100%;
        table-layout: auto;
        text-align: left;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 0.875em;
        line-height: 1.7142857;
    }

    .prose :where(thead):not(:where([class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
    }

    .prose :where(thead th):not(:where([class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        vertical-align: bottom;
        padding-right: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-left: 0.5714286em;
    }

    .prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
    }

    .prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
        border-bottom-width: 0;
    }

    .prose :where(tbody td):not(:where([class~="not-prose"] *)) {
        vertical-align: baseline;
        padding-top: 0.5714286em;
        padding-right: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-left: 0.5714286em;
    }

.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
}

    .prose :where(p):not(:where([class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
    }

    .prose :where(img):not(:where([class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }

    .prose :where(video):not(:where([class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }

    .prose :where(figure):not(:where([class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }

    .prose :where(h2 code):not(:where([class~="not-prose"] *)) {
        font-size: 0.875em;
    }

    .prose :where(h3 code):not(:where([class~="not-prose"] *)) {
        font-size: 0.9em;
    }

    .prose :where(li):not(:where([class~="not-prose"] *)) {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }

    .prose :where(ol > li):not(:where([class~="not-prose"] *)) {
        padding-left: 0.375em;
    }

    .prose :where(ul > li):not(:where([class~="not-prose"] *)) {
        padding-left: 0.375em;
    }

    .prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
    }

    .prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
        margin-top: 1.25em;
    }

    .prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
        margin-bottom: 1.25em;
    }

    .prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
        margin-top: 1.25em;
    }

    .prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
        margin-bottom: 1.25em;
    }

    .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
    }

    .prose :where(hr + *):not(:where([class~="not-prose"] *)) {
        margin-top: 0;
    }

    .prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
        margin-top: 0;
    }

    .prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
        margin-top: 0;
    }

    .prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
        margin-top: 0;
    }

    .prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
        padding-left: 0;
    }

    .prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
        padding-right: 0;
    }

    .prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
        padding-left: 0;
    }

    .prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
        padding-right: 0;
    }

    .prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
        margin-top: 0;
    }

    .prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
        margin-bottom: 0;
    }

.col-span-2 {
    grid-column: span 2 / span 2;
}

.my-16 {
    margin-top: 4rem;
    margin-bottom: 4rem;
}

.my-5 {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
}

.my-28 {
    margin-top: 7rem;
    margin-bottom: 7rem;
}

.mx-auto {
    margin-left: auto;
    margin-right: auto;
}

.my-4 {
    margin-top: 1rem;
    margin-bottom: 1rem;
}

.my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem;
}

.mx-2 {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
}

.my-1 {
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
}

.mt-4 {
    margin-top: 1rem;
}

.mb-8 {
    margin-bottom: 2rem;
}

.mt-12 {
    margin-top: 3rem;
}

.mr-4 {
    margin-right: 1rem;
}

.mt-3 {
    margin-top: 0.75rem;
}

.mb-4 {
    margin-bottom: 1rem;
}

.mr-8 {
    margin-right: 2rem;
}

.flex {
    display: flex;
}

.grid {
    display: grid;
}

.hidden {
    display: none;
}

.h-6 {
    height: 1.5rem;
}

.h-10 {
    height: 2.5rem;
}

.min-h-screen {
    min-height: 100vh;
}

.w-6 {
    width: 1.5rem;
}

.w-full {
    width: 100%;
}

.w-10 {
    width: 2.5rem;
}

.w-52 {
    width: 13rem;
}

.w-1\/2 {
    width: 50%;
}

.max-w-sm {
    max-width: 24rem;
}

.max-w-screen-lg {
    max-width: 1024px;
}

.max-w-xs {
    max-width: 20rem;
}

.max-w-\[244px\] {
    max-width: 244px;
}

.max-w-full {
    max-width: 100%;
}

.flex-1 {
    flex: 1 1 0%;
}

.flex-shrink-0 {
    flex-shrink: 0;
}

.grow {
    flex-grow: 1;
}

.cursor-pointer {
    cursor: pointer;
}

.list-inside {
    list-style-position: inside;
}

.list-disc {
    list-style-type: disc;
}

.flex-row {
    flex-direction: row;
}

.flex-col {
    flex-direction: column;
}

.items-center {
    align-items: center;
}

.justify-center {
    justify-content: center;
}

.justify-between {
    justify-content: space-between;
}

.gap-4 {
    gap: 1rem;
}

.gap-2 {
    gap: 0.5rem;
}

.gap-8 {
    gap: 2rem;
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.overflow-x-auto {
    overflow-x: auto;
}

.overflow-y-hidden {
    overflow-y: hidden;
}

.overflow-x-scroll {
    overflow-x: scroll;
}

.rounded-full {
    border-radius: 9999px;
}

.bg-base-100 {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}

.bg-base-200 {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
}

.fill-current {
    fill: currentColor;
}

.stroke-current {
    stroke: currentColor;
}

.p-0 {
    padding: 0px;
}

.p-2 {
    padding: 0.5rem;
}

.p-4 {
    padding: 1rem;
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
}

.text-center {
    text-align: center;
}

.text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
}

.text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
}

.font-bold {
    font-weight: 700;
}

.font-normal {
    font-weight: 400;
}

.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-base-content {
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
}

.shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
    --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.react-select-tests__control {
    max-width: 20rem;
    min-height: 48px !important;
    border-radius: 8px !important;
}

.react-select-tests__control, .react-select-group__control {
    --tw-bg-opacity: 1 !important;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity)) !important;
}

.react-select-tests__menu {
    max-width: 20rem;
}

.react-select-tests__menu, .react-select-group__menu {
    --tw-bg-opacity: 1 !important;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity)) !important;
}

.react-select-tests__multi-value, .react-select-group__multi-value {
    --tw-bg-opacity: 1 !important;
    background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity)) !important;
}

.react-select-tests__multi-value__label, .react-select-group__multi-value__label {
    --tw-text-opacity: 1 !important;
    color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
}

.react-select-group__single-value {
    --tw-text-opacity: 1 !important;
    color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
}

.react-select-tests__input, .react-select-group__input {
    --tw-text-opacity: 1 !important;
    color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
}

.react-select-tests__option:active, .react-select-group__option--is-focused {
    --tw-bg-opacity: 1 !important;
    background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity)) !important;
}

.react-select-tests__option--is-focused {
    --tw-bg-opacity: 1 !important;
    background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity)) !important;
}

.react-select-group__control {
    min-height: 48px !important;
    border-radius: 8px !important;
}

.hover\:shadow-lg:hover {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 640px) {

    .sm\:modal-middle {
        align-items: center;
    }

        .sm\:modal-middle :where(.modal-box) {
            width: 91.666667%;
            max-width: 32rem;
            --tw-translate-y: 0px;
            --tw-scale-x: .9;
            --tw-scale-y: .9;
            transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
            border-bottom-left-radius: var(--rounded-box, 1rem);
            border-bottom-right-radius: var(--rounded-box, 1rem);
        }

    .sm\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }
}

@media (min-width: 768px) {

    .md\:stats-horizontal {
        grid-auto-flow: column;
    }

        .md\:stats-horizontal > :not([hidden]) ~ :not([hidden]) {
            --tw-divide-x-reverse: 0;
            border-right-width: calc(1px * var(--tw-divide-x-reverse));
            border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
            --tw-divide-y-reverse: 0;
            border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
            border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
        }

    .md\:stats-horizontal {
        overflow-x: auto;
    }
}

@media (min-width: 1024px) {

    .lg\:my-32 {
        margin-top: 8rem;
        margin-bottom: 8rem;
    }

    .lg\:mr-8 {
        margin-right: 2rem;
    }

    .lg\:w-1\/2 {
        width: 50%;
    }

    .lg\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .lg\:flex-row {
        /*flex-direction: row;*/
    }
}

/*# sourceMappingURL=index.css.map */
